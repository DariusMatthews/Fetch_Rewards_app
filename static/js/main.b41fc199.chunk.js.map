{"version":3,"sources":["components/List/list.module.scss","components/List/List.jsx","App.jsx","index.js"],"names":["module","exports","List","list","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","className","styles","container","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","tableHeaderCell","align","TableBody","slice","map","item","tableRow","hover","tabIndex","key","id","tableBodyCell","name","listId","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","e","newPage","onChangeRowsPerPage","value","target","App","setList","useEffect","fetch","then","res","json","data","sortedData","filter","entry","sort","a","b","catch","err","StylesProvider","injectFirst","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,gBAAkB,8BAA8B,SAAW,uBAAuB,cAAgB,8B,qOCmEzIC,EAvDF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAEDC,mBAAS,GAFR,mBAElBC,EAFkB,KAEZC,EAFY,OAGaF,mBAAS,IAHtB,mBAGlBG,EAHkB,KAGLC,EAHK,KAgBzB,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,IAAOC,WAChC,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,aAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAWC,IAAOQ,iBAA7B,QACA,kBAACD,EAAA,EAAD,CAAWR,UAAWC,IAAOQ,gBAAiBC,MAAM,SAApD,WACA,kBAACF,EAAA,EAAD,CAAWR,UAAWC,IAAOQ,gBAAiBC,MAAM,SAApD,QAGJ,kBAACC,EAAA,EAAD,KAEGnB,EAAKoB,MAAMlB,EAAOE,EAAaF,EAAOE,EAAcA,GAAaiB,KAAI,SAAAC,GAAI,OACxE,kBAACP,EAAA,EAAD,CAAUP,UAAWC,IAAOc,SAAUC,OAAK,EAACC,UAAW,EAAGC,IAAKJ,EAAKK,IAClE,kBAACX,EAAA,EAAD,CAAWR,UAAWC,IAAOmB,eAAgBN,EAAKO,MAClD,kBAACb,EAAA,EAAD,CAAWR,UAAWC,IAAOmB,cAAeV,MAAM,SAASI,EAAKQ,QAChE,kBAACd,EAAA,EAAD,CAAWR,UAAWC,IAAOmB,cAAeV,MAAM,SAASI,EAAKK,WAM1E,kBAACI,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAAK,KAClCC,UAAU,MACVC,MAAOlC,EAAKmC,OACZ/B,YAAaA,EACbF,KAAMA,EACNkC,aAxCW,SAACC,EAAGC,GACrBnC,EAAQmC,IAwCFC,oBArCkB,SAACF,GAAO,IACxBG,EAAUH,EAAEI,OAAZD,MACRnC,EAAemC,GACfrC,EAAQ,IAmCFK,UAAWC,IAAOQ,qB,MCrBbyB,MAnCf,WAAe,MAEWzC,mBAAS,IAFpB,mBAEND,EAFM,KAEA2C,EAFA,KAsBb,OAhBAC,qBAAU,WACRC,MAAM,yFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,IAGMC,EAHaD,EAAKE,QAAO,SAAAC,GAAK,MAAmB,KAAfA,EAAMvB,MAA8B,OAAfuB,EAAMvB,QAGrCwB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAExB,OAASyB,EAAEzB,QAAUwB,EAAE3B,GAAK4B,EAAE5B,MAG7EgB,EAAQO,MAETM,OAAM,SAAAC,GAAS,GAAIA,EAAK,MAAMA,OAChC,IAGD,kBAACC,EAAA,EAAD,CAAgBC,aAAW,GACzB,yBAAKnD,UAAU,OAEK,IAAhBR,EAAKmC,OACD,kBAAC,EAAD,CAAMnC,KAAMA,IACZ,iDC7Bd4D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b41fc199.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__3P87A\",\"tableHeaderCell\":\"list_tableHeaderCell__CmNB2\",\"tableRow\":\"list_tableRow__2Zma7\",\"tableBodyCell\":\"list_tableBodyCell__3txHP\"};","import React, { useState } from 'react';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination\n} from '@material-ui/core';\nimport styles from './list.module.scss';\n\nconst List = ({ list }) => {\n  // state for page and rows per page\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  // function to change page\n  const changePage = (e, newPage) => {\n    setPage(newPage);\n  };\n  // function to change rows per page\n  const changeRowsPerPage = (e) => {\n    const { value } = e.target;\n    setRowsPerPage(value);\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <Paper>\n        <TableContainer className={styles.container}>\n          <Table stickyHeader aria-label=\"data list\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={styles.tableHeaderCell}>NAME</TableCell>\n                <TableCell className={styles.tableHeaderCell} align=\"right\">LIST ID</TableCell>\n                <TableCell className={styles.tableHeaderCell} align=\"right\">ID</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {/* display a specified amount of rows per page */}\n              {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(item => (\n                <TableRow className={styles.tableRow} hover tabIndex={-1} key={item.id}>\n                  <TableCell className={styles.tableBodyCell}>{item.name}</TableCell>\n                  <TableCell className={styles.tableBodyCell} align=\"right\">{item.listId}</TableCell>\n                  <TableCell className={styles.tableBodyCell} align=\"right\">{item.id}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[50, 75, 100, 150]}\n          component=\"div\"\n          count={list.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={changePage}\n          onChangeRowsPerPage={changeRowsPerPage}\n          className={styles.tableHeaderCell}\n        />\n      </Paper>\n    </div>\n  )\n}\n\nexport default List\n","import React, { useState, useEffect } from 'react';\nimport { StylesProvider } from '@material-ui/core';\nimport List from './components/List/List';\nimport './App.scss';\n\nfunction App() {\n  // state for api array\n  const [list, setList] = useState([]);\n\n  // fetch array when component mounts\n  // send request to proxy to bypass CORS error\n  useEffect(() => {\n    fetch('https://cors-anywhere.herokuapp.com/https://fetch-hiring.s3.amazonaws.com/hiring.json')\n      .then(res => res.json())\n      .then(data => {\n        // filter out blank or null values\n        const filterData = data.filter(entry => entry.name !== '' && entry.name !== null);\n\n        // sort data by listId and Name (id number) in ascending order\n        const sortedData = filterData.sort((a, b) => a.listId - b.listId || a.id - b.id);\n\n        // set list state to data\n        setList(sortedData);\n      })\n      .catch(err => { if (err) throw err });\n  }, []);\n\n  return (\n    <StylesProvider injectFirst>\n      <div className=\"app\">\n        {\n          list.length !== 0\n            ? <List list={list} />\n            : <h1>Now loading...</h1>\n        }\n      </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}